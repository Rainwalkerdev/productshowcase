/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useLayoutEffect, useRef } from "react";
import { useGLTF, useScroll } from "@react-three/drei";
import { GenerateInitMaterials, GenerateAnimations } from "./Utils";
import gsap, { Power4 } from "gsap";
import { useFrame, useThree } from "@react-three/fiber";
import { color } from "three/tsl";

export function Bottle(props) {
  const { cristalMaterial, sodaMaterial, brandMaterial } =
    GenerateInitMaterials();
  const scene = useThree((state) => state.scene);
  const timeline = gsap.timeline({
    defaults: { duration: 2, ease: Power4.easeInOut },
  });
  const scroll = useScroll();

  const colorsMaterial = {
    cristalMaterial: "#8c8c8c",
    sodaMaterial: "#000",
  };

  useLayoutEffect(() => {
    const animations = GenerateAnimations(
      scene,
      colorsMaterial,
      cristalMaterial,
      sodaMaterial
    );
    animations.map((animation) => {
      timeline.to(
        animation.target,
        {
          ...animation.animationProperties,
        },
        animation.pointTime
      );
    });
  }, []);

  useFrame(() => {
    timeline.seek(scroll.offset * timeline.duration());
  });

  const { nodes, materials } = useGLTF("/Bottle.glb");
  return (
    <group {...props} dispose={null}>
      <group name="BottleGroup">
        <mesh
          name="Bottle"
          castShadow
          receiveShadow
          geometry={nodes.Bottle.geometry}
          material={cristalMaterial}
        />
        <mesh
          name="Soda"
          castShadow
          receiveShadow
          geometry={nodes.Soda.geometry}
          material={sodaMaterial}
        />
        <mesh
          name="Brand"
          castShadow
          receiveShadow
          geometry={nodes.Brand.geometry}
          material={brandMaterial}
        />
        <mesh
          name="Cap"
          castShadow
          receiveShadow
          geometry={nodes.Cap.geometry}
          material={brandMaterial}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/Bottle.glb");
